name: Provision Jenkins and Deploy App

on:
  workflow_dispatch:

jobs:
  terraform:
    name: Provision infrastructure with Terraform
    runs-on: ubuntu-latest
    outputs:
      jenkins_ip: ${{ steps.tfout.outputs.jenkins_ip }}
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.5

      - name: Terraform Init
        run: terraform -chdir=terraform init -input=false

      - name: Terraform Apply
        run: terraform -chdir=terraform apply -auto-approve

      - name: Export Terraform outputs
        id: tfout
        run: |
          echo "jenkins_ip=$(terraform -chdir=terraform output -raw jenkins_public_ip)" >> $GITHUB_OUTPUT

      - name: Restore SSH private key
        run: |
          echo "${{ secrets.JENKINS_KEY }}" | base64 -d > ansible/jenkins-key.pem
          chmod 600 ansible/jenkins-key.pem

      - name: Wait for EC2 to be ready
        run: |
          ip=$(terraform -chdir=terraform output -raw jenkins_public_ip)
          key=ansible/jenkins-key.pem
          echo "Checking SSH availability on $ip with key $key ..."
          for i in {1..20}; do
            if ssh -o StrictHostKeyChecking=no -i $key ubuntu@$ip 'echo ready'; then
              echo "EC2 is ready!"
              exit 0
            fi
            echo "Waiting for EC2 SSH... attempt $i"
            sleep 15
          done
          echo "EC2 did not become ready in time" >&2
          exit 1

  ansible:
    name: Configure Jenkins with Ansible
    runs-on: ubuntu-latest
    needs: terraform
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install Ansible
        run: pip install ansible

      - name: Restore SSH private key
        run: |
          echo "${{ secrets.JENKINS_KEY }}" | base64 -d > ansible/jenkins-key.pem
          chmod 600 ansible/jenkins-key.pem

      - name: Generate inventory file
        run: |
          cat > ansible/inventory.yml <<EOT
          all:
            hosts:
              ${{ needs.terraform.outputs.jenkins_ip }}:
                ansible_user: ubuntu
                ansible_ssh_private_key_file: ansible/jenkins-key.pem
                ansible_ssh_common_args: '-o StrictHostKeyChecking=no -o ConnectTimeout=5'
          EOT

      - name: Run Ansible Playbook
        run: |
          ansible-playbook -i ansible/inventory.yml ansible/playbooks/jenkins.yml \
            -e "jenkins_admin_user=${{ secrets.JENKINS_ADMIN_USER }}" \
            -e "jenkins_admin_password=${{ secrets.JENKINS_ADMIN_PASSWORD }}"

  jenkins:
    runs-on: ubuntu-latest
    needs: 
      - terraform
      - ansible
    steps:
      - name: Trigger Jenkins via API
        run: |
          curl -u "${{ secrets.JENKINS_ADMIN_USER }}:${{ secrets.JENKINS_ADMIN_PASSWORD }}" \
            -X POST "http://${{ needs.terraform.outputs.jenkins_ip }}:8080/job/my-pipeline/build?token=${{ secrets.JENKINS_TRIGGER_TOKEN }}"
