- name: Install and configure Jenkins controller
  hosts: all
  become: yes
  vars:
    jenkins_plugins:
      - workflow-aggregator
      - git
      - credentials
      - pipeline-stage-view
      - configuration-as-code
      - job-dsl
      - docker-plugin
      - docker-workflow 

  tasks:
    # --- Prereqs ---
    - name: Ensure dependencies are installed
      apt:
        name:
          - curl
          - gnupg2
          - ca-certificates
          - openjdk-17-jdk
          - git
          - unzip
          - docker.io
          - docker-compose
        state: present
        update_cache: yes

    - name: Add Jenkins apt key
      shell: curl -fsSL https://pkg.jenkins.io/debian/jenkins.io-2023.key | gpg --dearmor -o /usr/share/keyrings/jenkins-keyring.gpg
      args:
        creates: /usr/share/keyrings/jenkins-keyring.gpg

    - name: Add Jenkins repo
      copy:
        dest: /etc/apt/sources.list.d/jenkins.list
        content: "deb [signed-by=/usr/share/keyrings/jenkins-keyring.gpg] https://pkg.jenkins.io/debian binary/\n"

    # --- Jenkins ---
    - name: Install Jenkins
      apt:
        name: jenkins
        state: present
        update_cache: yes

    - name: Start and enable Jenkins
      systemd:
        name: jenkins
        enabled: yes
        state: started
    
    - name: Download Jenkins Plugin Manager if missing
      get_url:
        url: https://github.com/jenkinsci/plugin-installation-manager-tool/releases/download/2.13.2/jenkins-plugin-manager-2.13.2.jar
        dest: /usr/local/bin/jenkins-plugin-manager.jar
        mode: '0755'
      become: yes

    - name: Install Jenkins plugins with plugin manager
      shell: |
        java -jar /usr/local/bin/jenkins-plugin-manager.jar --plugins {{ jenkins_plugins | join(' ') }}
      environment:
        JENKINS_HOME: /var/lib/jenkins
      become: yes

    # --- Admin User ---
    - name: Create admin user via init.groovy.d
      copy:
        dest: /var/lib/jenkins/init.groovy.d/basic-security.groovy
        content: |
          #!groovy
          import jenkins.model.*
          import hudson.security.*
          def instance = Jenkins.getInstance()
          def hudsonRealm = new HudsonPrivateSecurityRealm(false)
          hudsonRealm.createAccount("{{ jenkins_admin_user }}", "{{ jenkins_admin_password }}")
          instance.setSecurityRealm(hudsonRealm)
          def strategy = new FullControlOnceLoggedInAuthorizationStrategy()
          strategy.setAllowAnonymousRead(false)
          instance.setAuthorizationStrategy(strategy)
          instance.save()

      notify:
        - Restart Jenkins

    # --- Docker access ---
    - name: Add Jenkins user to Docker group
      user:
        name: jenkins
        groups: docker
        append: yes

  handlers:
    - name: Restart Jenkins
      systemd:
        name: jenkins
        state: restarted
